<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simons.cn.springbootdemo.dao.system.MovieMapper">
    <resultMap id="BaseResultMap" type="com.simons.cn.springbootdemo.bean.Movie">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="link" property="link" jdbcType="VARCHAR"/>
        <result column="passwd" property="passwd" jdbcType="VARCHAR"/>
        <result column="original" property="original" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, link, passwd, original, type
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from movie
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from movie
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.simons.cn.springbootdemo.bean.Movie">
        insert into movie (id, name, link,
        passwd, original, type
        )
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR},
        #{passwd,jdbcType=VARCHAR}, #{original,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.simons.cn.springbootdemo.bean.Movie">
        insert into movie
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="link != null">
                link,
            </if>
            <if test="passwd != null">
                passwd,
            </if>
            <if test="original != null">
                original,
            </if>
            <if test="type != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="link != null">
                #{link,jdbcType=VARCHAR},
            </if>
            <if test="passwd != null">
                #{passwd,jdbcType=VARCHAR},
            </if>
            <if test="original != null">
                #{original,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.simons.cn.springbootdemo.bean.Movie">
        update movie
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="link != null">
                link = #{link,jdbcType=VARCHAR},
            </if>
            <if test="passwd != null">
                passwd = #{passwd,jdbcType=VARCHAR},
            </if>
            <if test="original != null">
                original = #{original,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.simons.cn.springbootdemo.bean.Movie">
        update movie
        set name = #{name,jdbcType=VARCHAR},
        link = #{link,jdbcType=VARCHAR},
        passwd = #{passwd,jdbcType=VARCHAR},
        original = #{original,jdbcType=VARCHAR},
        type = #{type,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>


    <select id="selectAll" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from movie
        <where>
            <if test="name != null">
                name like #{name}
            </if>
        </where>
        limit 20
    </select>

    <insert id="insertBatch">
        insert into movie(name, link,passwd, original, type) values
        <foreach collection="list" item="movie" separator=",">
            (#{movie.name},#{movie.link},#{movie.passwd},#{movie.original},#{movie.type})
        </foreach>
    </insert>

    <select id="findByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from movie where name like #{name} limit 10;
    </select>

    <update id="updateById" parameterType="java.util.Map">
        update movie set name=#{name},link=#{link} where id=#{id};
    </update>
</mapper>
